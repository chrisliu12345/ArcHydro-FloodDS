# Replace a layer/table view name with a path to a dataset (which can be a layer file) or create the layer/table view within the script
# The following inputs are layers or table views: "fillgrid", "str"
#arcpy.HandDSCreate(fillgridsub="fillgrid", Multiplier="100", str="str", pFolder="D:/Data10/FloodDS/HandTest/HandBase", NibbleSeed="%pFolder%/FDHDSeed", HANDBASE="%pFolder%/FDHDBase", LocalMinBase="%pFolder%/LocalMin")
# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# FloodHandBaseM.py
# Created on: 2016-11-04 12:04:55.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: FloodHandBaseM <fillgridsub> <Multiplier> <str> <pFolder> <NibbleSeed> <HANDBASE> <LocalMinBase> 
# Description: 
# ---------------------------------------------------------------------------

# Import arcpy module
import os
import time  
import arcpy
import apwrutils 

FD_HANDBase = "HNADBASE"
LN_NibbleBase = "NibbleBase"
LN_LocalMin = "MinLocal"
LN_HANDBase = "HANDBASE"

def getZUnitFactor(pRaster):
    oDesc = arcpy.Describe(pRaster) 
    oSpRef = oDesc.spatialReferece 
   

if(__name__=='__main__'):
    handRaster = arcpy.GetParameterAsText(0)
    deltaH = arcpy.GetParameterAsText(1)
    pPath = arcpy.GetParameterAsText(2)
    minLocalRaster = arcpy.GetParameterAsText(3)

    ds = time.clock()
    arcpy.env.overwriteOutput = True 
    apwrutils.Utils.GetLinearUnitName(handRaster) 
    deltaH = float(deltaH) 
    (zFactor,zUnit) = apwrutils.Utils.getZFactorUnit(handRaster)
    deltaH = deltaH * zFactor 
    expression = "value < {}".format(deltaH)  
    wseRaster = arcpy.sa.Con(handRaster, handRaster, "", expression)       # handRaster, handRaster, "", Expression)
    
    depthRaster = arcpy.sa.Minus(deltaH, wseRaster) 
    depthName = "depth{}".format(int(deltaH)) 
    depthPath = os.path.join(pPath, depthName) 
    depthRaster.save(depthPath)
    if(arcpy.Exists(minLocalRaster)):
        wseRaster = arcpy.sa.Plus(wseRaster, minLocalRaster)

    fpName = "FP{}".format(int(deltaH))
    fpPath = os.path.join(pPath, fpName )
    arcpy.AddMessage("{} {}".format(fpPath, fpName))
    wseRaster.save(fpPath)

    arcpy.MakeRasterLayer_management(depthPath, depthName)
    arcpy.MakeRasterLayer_management(fpPath, fpName)   
    arcpy.SetParameterAsText(4, fpName)
    arcpy.SetParameterAsText(5, depthName) 

